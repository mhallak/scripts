sudo apt install terminator
sudo add-apt-repository ppa:/yannubuntu/boot-repair
sudo apt-get update
sudo apt-get install -y boot-repair && boot-repair
sudo apt install nvidia-driver-440 
reboot
sudo apt install apt-transport-https curl
curl -s https://brave-browser-apt-release.s3.brave.com/brave-core.asc | sudo apt-key --keyring /etc/apt/trusted.gpg.d/brave-browser-release.gpg add -
echo "deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main" | sudo tee /etc/apt/sources.list.d/brave-browser-release.list
sudo apt update
sudo apt install brave-browser
sudo dpkg -i google-chrome-stable_current_amd64.deb 
reboot
sudo apt install -y v4l-utils
sudo apt install -y git-all
sudo apt install -y sl fortune mplayer mencoder mpv vlc meld
sudo apt-get install -y default-jre default-jdk
sudo apt-get install -y libgstrtspserver-1.0 libgstreamer1.0-dev
sudo add-apt-repository universe
sudo add-apt-repository multiverse
sudo apt update
sudo apt-get install -y openssh-server
sudo ufw allow 22
sudo apt install -y mesa-utils tree 
sudo apt install mesa-utils tree 
sudo apt install -y  lbzip2 htop slurm tcptrack
sudo apt install lbzip2 htop slurm tcptrack
sudo apt install -y synaptic aptitude curl gnupg2 lsb-release
sudo apt install -y  python3-argcomplete
sudo apt install python3-argcomplete
sudo apt install python-pip python3-pip pylint3 pylint
sudo apt install -y  vim 
sudo apt install -y vim v4l2loopback-dkms v4l2loopback-utils ffmpeg net-tools
sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
curl -sSL 'http://keyserver.ubuntu.com/pks/lookup?op=get&search=0xC1CF6E31E6BADE8868B172B4F42ED6FBAB17C654' | sudo apt-key add -
sudo apt update
sudo apt install ros-melodic-desktop-full
source /opt/ros/melodic/setup.bash
sudo apt install python-rosdep python-rosinstall python-rosinstall-generator python-wstool build-essential
sudo apt install python-rosdep
sudo rosdep init
rosdep update
sudo apt install ros-melodic-move-base ros-melodic-move-base-msgs 
sudo apt install ros-melodic-driver-base ros-melodic-ackermann-msgs 
sudo apt install ros-melodic-tf2 ros-melodic-tf2-web-republisher
sudo apt install ros-melodic-rosbridge-server
sudo apt install -y ros-melodic-joy
sudo apt install python3-catkin-pkg-modules python3-rospkg-modules python3-empy
pip3 install scp numpy
sudo apt install sshpass
sudo apt install blender
sudo apt-get install python-catkin-tools
sudo apt install libpcap0.8-dev
sudo apt install ros-melodic-qt-ros
sudo apt install ros-melodic-fcl-catkin
sudo apt install ros-melodic-octomap-msgs
sudo snap install pycharm-community --classic
Download UnityHub and install Unity 2019.3.15f1
Download and install visual code:
sudo dpkg -i code_1.46.1-1592428892_amd64.deb 
sudo apt-get install gstreamer1.0-plugins-ugly
sudo apt-get install libx264-dev
sudo apt install gstreamer1.0-libav
With Ubuntu Software application, install Filezilla
pip3 install stable-baselines[mpi]
pip3 install stable-baselines[mpi] --upgrade
pip3 install tensorflow==1.14   (CPU)
pip3 install keras==2.3.1
install mcts python package - don't know how - with pycharm
sudo apt install putty putty-tools
sudo apt-get install can-utils
sudo apt install nano
sudo aptitude install teamviewer
#Install ROS2 Eloquent: https://index.ros.org/doc/ros2/Installation/Eloquent/Linux-Install-Debians/
sudo locale-gen en_US en_US.UTF-8
sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
export LANG=en_US.UTF-8
sudo apt update && sudo apt install curl gnupg2 lsb-release
curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -
sudo sh -c 'echo "deb [arch=$(dpkg --print-architecture)] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" > /etc/apt/sources.list.d/ros2-latest.list'
sudo apt update
sudo apt install ros-eloquent-desktop
sudo apt install ros-eloquent-ros-base
sudo apt install ros-eloquent-ros1-bridge
sudo apt install ros-eloquent-rmw-opensplice-cpp
sudo apt install ros-eloquent-rmw-connext-cpp

px4-ros2
pip3 install --user pyros-genmsg
pip3 install --user packaging
fastrtpsgen:
	install gradle https://gradle.org/install/
		curl -s "https://get.sdkman.io" | bash ==>error - didn't install sdkman https://sdkman.io/install
	sudo aptitude install zip
	install manually in /opt/gradle following https://gradle.org/install/
	Checkout Fast-DDS-Gen GIT Tag v1.0.4 before change of script name
	Follow: https://fast-dds.docs.eprosima.com/en/latest/installation/sources/sources_linux.html#fastddsgen-sl

#For pypubsub
rosdep install -i --from-path src --rosdistro eloquent -y installed: 
	ros-eloquent-launch-testing-ros

sudo apt install ros-eloquent-turtlesim
sudo apt install ros-eloquent-launch*

pip install python-statemachine
sudo apt-get install brasero

# For .net https://docs.microsoft.com/en-us/dotnet/core/install/linux-ubuntu#1804-
wget https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
sudo dpkg -i packages-microsoft-prod.deb
sudo apt-get update; \
  sudo apt-get install -y apt-transport-https && \
  sudo apt-get update && \
  sudo apt-get install -y dotnet-sdk-3.1

pip install roslibpy
pip install pysimplegui
pip3 install pysimplegui

sudo apt-get install graphviz
sudo apt-get install gstreamer1.0-plugins-bad

sudo apt-get install ros-$ROS_DISTRO-mavros ros-$ROS_DISTRO-mavros-extras
wget https://raw.githubusercontent.com/mavlink/mavros/master/mavros/scripts/install_geographiclib_datasets.sh
chmod a+x install_geographiclib_datasets.sh 
sudo ./install_geographiclib_datasets.sh
sudo usermod -a -G dialout $USER
sudo apt install ros-melodic-diagnostics
sudo apt install putty

Packages installed successfully: Installed packages: 'numpy~=1.19.2', 'scipy~=1.4.1', 'setuptools~=46.1.3', 'Keras~=2.3.1'

sudo apt install ros-eloquent-geodesy
pip install pyproj
pip3 install pyproj

For PX4: sudo apt-get remove modemmanager -y

##Install MAVROS from sources - follow: https://github.com/mavlink/mavros/blob/master/mavros/README.md#installation
sudo apt-get install python-catkin-tools python-rosinstall-generator -y
- Install mavlink:
rosinstall_generator --rosdistro melodic mavlink | tee /tmp/mavros.rosinstall
rosinstall_generator --upstream mavros | tee -a /tmp/mavros.rosinstall
wstool merge -t src /tmp/mavros.rosinstall
wstool update -t src -j4
rosdep install --from-paths src --ignore-src -y
pip install future

#install mavproxy
python3 -m pip install -U pygame --user
sudo apt-get install python3-dev python3-opencv python3-wxgtk4.0 python3-pip python3-matplotlib python3-lxml
pip3 install PyYAML mavproxy --user

#install mavexplorer
sudo apt-get install python-matplotlib python-serial python-wxgtk3.0 python-lxml
sudo apt-get install python-scipy python-opencv  python-pip python-pexpect python-tk
sudo pip install --upgrade pymavlink mavproxy

#for the dog:
sudo apt install -y ros-melodic-interactive-marker-twist-server ros-melodic-joint-state-controller ros-melodic-gazebo-plugins ros-melodic-effort-controllers ros-melodic-controller-manager ros-melodic-gazebo-ros-control ros-melodic-ros-control ros-melodic-joystick-drivers ros-melodic-hector-gazebo-plugins
sudo apt install tmux

#Check QoS with ROS2
sudo apt-get install ros-eloquent-image-tools

#Install Docker
sudo apt install \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg-agent \
    software-properties-commonsudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"
sudo apt install docker-ce docker-ce-cli containerd.io
Sanity:
    systemctl start docker
    sudo systemctl enable docker
    docker run hello-world
sudo usermod -aG docker ${USER}

#Install NVIDIA docker
distribution=$(. /etc/os-release;echo $ID$VERSION_ID) \
   && curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add - \
   && curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list
    Optional: experimental
     curl -s -L https://nvidia.github.io/nvidia-container-runtime/experimental/$distribution/nvidia-container-runtime.list | sudo tee /etc/apt/sources.list.d/nvidia-container-runtime.list
sudo apt-get update
sudo apt-get install -y nvidia-docker2
sudo systemctl restart docker
    Test it:
	sudo docker run --rm --gpus all nvidia/cuda:11.0-base nvidia-smi
    ==> driver too old
	sudo docker run --rm --gpus all nvidia/cuda:10.0-base nvidia-smi
    ==> ok!





